/**
 * Copies all .md files in packages/framework/docs into one file which is
 * loaded as part of the AI system prompt
 */

import fs from 'fs';
import path from 'path';

const docsDir = path.join(process.cwd(), 'packages', 'framework', 'docs');
const outputFile = path.join(process.cwd(), 'services', 'src', 'public-api', '.generated', 'frameworkDocs.ts');

const outputDir = path.dirname(outputFile);
if (!fs.existsSync(outputDir)) {
	fs.mkdirSync(outputDir, { recursive: true });
}

const docsFiles = fs
	.readdirSync(docsDir)
	.filter((file) => file.endsWith('.md'))
	.map((file) => path.join(docsDir, file));

const output = docsFiles
	.map((file) => {
		const content = fs.readFileSync(file, 'utf-8');
		return `\n-----\n${file}\n${content}\n---------\n`.replace(/`/g, '\\`'); // Escape backticks
	})
	.join('\n');

const outputContent = `// This file is auto-generated by scripts/frameworkDocs.mjs
const frameworkDocs = \`
You are creating a game for the Alef runtime, a game engine that runs in the browser and provides some basic game engine functionality for you to utilize.
Below are the docs for the Alef framework. You can use this to help you create your game. Always prefer to use the tools documented below for relevant tasks.

<begin Alef framework docs>
${output}
<end Alef framework docs>
\`;
export default frameworkDocs;
`;
fs.writeFileSync(outputFile, outputContent, 'utf-8');
console.log(`Framework docs have been copied to ${outputFile}`);
